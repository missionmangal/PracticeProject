Cold vs Hot Observable->

=> There are two types of observables: hot and cold. The main difference is that a cold observable
   creates a data producer for each subscriber, whereas a hot observable creates a data producer first,
   and each subscriber gets the data from one producer, starting from the moment of subscription.

=> Let’s compare watching a movie on Netflix to going into a movie theater. Think of yourself 
   as an observer. Anyone who decides to watch Mission: Impossible on Netflix will get the
   entire movie, regardless of when they hit the play button. Netflix creates a new producer
   to stream a movie just for you. This is a cold observable.

=> If you go to a movie theater and the showtime is 4 p.m., the producer is created at 4 p.m.,
   and the streaming begins. If some people (subscribers) are late to the show, they miss the
   beginning of the movie and can only watch it starting from the moment of arrival. 
   This is a hot observable.

=> A cold observable starts producing data when some code invokes a subscribe() function on it.
   For example, your app may declare an observable providing a URL on the server to get certain 
   products. The request will be made only when you subscribe to it. If another script makes the
   same request to the server, it’ll get the same set of data.

=> A hot observable produces data even if no subscribers are interested in the data. For example,
   an accelerometer in your smartphone produces data about the position of your device, even if 
   no app subscribes to this data. A server can produce the latest stock prices even if no user 
   is interested in this stock.
   
******************************************************************************************   
Convert "cold observable" to "hot observable" ->

=> to convert, we use ConnectableObservable class (Which provides hot observable).
=> after creating a observable we call .publish() mehtod to convert it in hot observable.
=> In this case emmition does not start after subscribing the observable. But emmition starts
   when we call connect() method on ConnectableObservable's object.
=> hot observable doesn't care about subscriber to start emmition.
=> Once connect method gets called it starts emmition.   