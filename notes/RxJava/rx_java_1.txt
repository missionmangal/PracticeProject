Reference -> https://medium.com/gradeup/simplest-rxjava-tutorial-for-android-262013ce3545
Reference -> https://codingwithmitch.com/courses/rxjava-rxandroid-for-beginners/rxjava-operators/


Observable ->
=> Observable is a data stream that been observed by Observer and would emit data to Observer.


Observer:->
=> Observer is the other side of Observable. It receives the data emitted by Observable.


Subscribe:->
=> The bridge between Observable and Observe. There can be multiple Observers subscribed to a 
single Observable.


Operators:->
=> Operators modifies the data which is emit by Observable. The Observer will get the data 
which has changed.


Schedulers:->
=> Schedulers determines which thread should Observable emit the data and on which Observer 
should receives the data.


Losses by using AsyncTask ->

1. Boilerplate code
2. Multithreading was a nightmare
3. More error prone
4. Memory/context leaks are easily created is an inner class and thus holds an implicit reference
   to the outer class
5. No error handling

Benefits -> 

1. Less code
2. Multithreading (will be explained in upcoming tutorials)
3. Minimized error occurrences
4. No memory leaks
5. And a way to handle the error at one single point(on Error()).

Methods
onSubscribe() -> 
Method will be called when an Observer subscribes to Observable.

onNext()->
This method will be called when Observable starts emitting the data.

onError()->
In case of any error, onError() method will be called.

onComplete()->
When an Observable completes the emission of all the items,
onComplete() will be called.
