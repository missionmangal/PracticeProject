Saving Sensitive Data in KeyStore.

=> Using KeyStore we encrypt the value of any sensitive data and attatch a key (by which we save it in sharedPreference).
=> After encrypting the data we store it in Shared Preferences.
=> Now we create a file in which we save Initialization Vector (IV) 
   which we get from the Cipher by which we encrypt the data.
=> This IV must be same when we decrypt the data. 
   That's why we store it in a file and save that file.

**** At the time of encryption/decryption we use a secretKey which is never hardCoded. 
	 which can get by code. So it's Secured. *****
Process ->

1. Create a .properties file where we can store all sensitive data
2. get these sensitive data using buildConfigField in build.gradle file
	ex ->  buildConfigField "String", "MIX_PANEL_TOKEN", keys.("MIX_PANEL_TOKEN")
	
	
******************Encrypting and saving data************************	

1. create an object of KeyGenerator class.
2. get a secretKey from keyGenerator.
3. Now using this secretKey encrypt the data by Cipher.
4. After encrypting we get byteArray. 
5. encode byteArray using Base64    **Missing in many tutorials
6. now save the encrypted value in SharedPreference
7. * save the "iv" value of Cipher by which we encrypted the data in a file.

 
******************Decrypting and saving data************************	
1. Get the encrypted string from Shared Preferences.
2. Get the iv value from the corrosponding file.
3. Get secretKey from keyStore using corrosponding key.
4. Decode teh string using Base64.  **Missing in many tutorials
5. now decrypt this decoded data using secretKey , iv and Cipher.

